---
title: "Project Data Exploring"
subtitle: "Project: Part 2"
author: Erick E. Mollinedo
date: '`r format(Sys.Date(), "%B %d, %Y")`'
format: html
editor: visual
---

## Concentrations

```{r}
#Load packages to use
library(readr)
library(here)
library(vtable)
library(corrplot)
library(tidyverse)
library(RColorBrewer)
library(naniar)
library(ggpubr)
library(rstatix)
```

Load the `concentration` file.

```{r}
concentration <- read_rds(here("data", "processed-data", "concentration.rds"))
```

I will produce two boxplots, that summarize the concentrations categorized by `arm` and `fueltype`. First I will create a dataframe in longer format using `pivot_longer()`. Then creating the plots using `ggplot()`. In addition, I will add the significance test value to the plots to visualize which chemical species are statistically different among groups.

```{r}
#Pivot longer the `concentration` df to make the boxplots
conc_longer <- concentration %>% #First a df with the `arm` variable
  pivot_longer(cols = -c(filter_id, fueltype, arm),
               names_to = "species", values_to = "concentration")

#conduct the t-test of concentration-fuel_type
stat.test <- conc_longer %>% 
  group_by(species) %>% 
  t_test(concentration ~ fueltype) %>% 
  add_significance() #to add the significance values

#Add the position coordinates
stat.test <- stat.test %>% 
  add_x_position(x= "species", dodge = 0.8) %>% #x position is species, and the length of significance bar is 0.8
  add_y_position(y.trans = function(x){log10(x)}) #add y position, in this case specify using a function that it is in log10 scale

#Creating the boxplot of concentrations by fueltype
options(scipen = 999) #to remove scientific notation for smaller values (i.e. changes from 1*10-3 to 0.001)
ggplot(conc_longer)+
  geom_boxplot(aes(x= species, y= concentration, fill= fueltype))+
  scale_fill_brewer(palette = "Paired")+
  labs(x= "Chemical species", y= "Concentration (ug/m3)")+
  scale_y_log10()+
  guides(fill= guide_legend(title= "Fuel type"))+ #Change legend from fuel_type to Fuel type
  theme_bw(base_size = 15)+
  stat_pvalue_manual(stat.test, label = "p.signif", tip.length = 0.001) #Add the significance bars, use 'p.signif' to add *** or 'ns'

#Creating the boxplot of concentrations by arm
options(scipen = 999) #to remove scientific notation for smaller values (i.e. changes from 1*10-3 to 0.001)
ggplot(conc_longer)+
  geom_boxplot(aes(x= species, y= concentration, fill= arm))+
  scale_fill_brewer(palette = "Paired")+
  labs(x= "Chemical species", y= "Concentration (ug/m3)")+
  scale_y_log10()+
  guides(fill= guide_legend(title= "Study Arm"))+ #Change legend from fuel_type to Fuel type
  theme_bw(base_size = 15)+
  stat_pvalue_manual(stat.test, label = "p.signif", tip.length = 0.001) #Add the significance bars, use 'p.signif' to add *** or 'ns'
```

The boxplots for `fueltype` and `arm` show what I was expecting in terms of how the data is distributed. The concentrations seem higher in some elemental especies such as BC, Ca, K, Mg, Mn and S. The following steps will be to evaluate if those differences in concentrations are statistically different.

And now producing summary statistics by type of fuel, using the `sumtable()` function.

```{r}
#Produce summary statistics by type of fuel
#Remove arm and fueltype columns
conc <- concentration %>% select(-arm)

#Using the vtable package, which creates a table
sumtable(conc, group = 'fueltype', group.long = T, add.median = T)
```

Now I will create a correlation plot using the `corrplot()` function, to explore which elements could be more associated between each other.

```{r}
#First, delete unnecessary variables to conduct the correlation test
cor <- concentration %>% select(-c(filter_id, fueltype, arm))

#Perform the spearman correlation test
cor <- stats::cor(cor, method = "pearson", use = "complete.obs") #I had to input the `use=` argument since there are missing values in the BC variable. I will correct them later.

#Create the correlation plot
corrplot(cor, method = "color", type = "lower", #Color form and displays at the lower portion
         col = COL2("RdYlBu", 20), order = "hclust", #Color palette, and order or the species
         tl.col = "orangered4", tl.srt = 0, tl.cex = 0.9,  #Color of the axis, position and size
         addCoef.col = "gray10", number.font = 2, number.cex = 0.8, #Display correlation number, set the font and size
         col.lim = c(0, 1), is.corr = T) #Set the color limits at the bar
```

The correlation plot above shows that Si and Fe are strongly correlated, which might suggest that these elements represent one specific source of pollution. Other high correlations observed are between Al and Si, and Fe and Ti.

## Uncertainties

Load the `uncertainty` file.

```{r}
uncertainty <- read_rds(here("data", "processed-data", "uncertainty.rds"))
```

I will produce a summary table of the uncertainties, using the `vtable` package.

```{r}
#Remove the `arm` variable
unc_fuel <- uncertainty %>% select(-arm)

#Use the `sumtable()` function from the `vtable` package, which creates a table
sumtable(unc_fuel, group = 'fueltype', group.long = T, add.median = T, out = 'kable')

#Remove the `fueltype` variable
unc_arm <- uncertainty %>% select(-fueltype)

#Use the `sumtable()` function from the `vtable` package, which creates a table
sumtable(unc_arm, group = 'arm', group.long = T, add.median = T, out = 'kable')

```

The tables above are just a way to represent the summary statistics of the uncertainties, however, the uncertainties will only be useful for the PMF analysis after the conclusion of this project. One thing noticed also from this table, is that there are some infinite values from the BC concentrations, which also show that there are missing values that have to be corrected in earlier steps. From this tables we can also see that there are 376 observations from the 'Biomass' and 254 from the 'LPG' fueltypes. Meanwhile, there are 323 observations from the 'Control' arm and 307 from the 'Intervention' arm.

## HAPIN variables

Loading the `hapin_samples` file.

```{r}
hapin <- read_rds(here("data", "processed-data", "hapin_samples.rds"))
```

First, check if there are missing values for any of the observations using the `gg_miss_var()` function.

```{r}
gg_miss_var(hapin)
```

As seen above, there are some missing values from the observational exposures (kerosene to coil), there is just one missing observation for PM2.5 and BC concentrations and there is more than 30 missing observations for CO (carbon monoxide). The missing observation of BC might explain the missing value spotted before, so this observation might actually have to be dropped down.

Now I will create a barplot showing the distribution of responses for the categorical variables `kerosene`, `trash`, `stove_other`, `stove`, `smoky`, `incense`, `generator`, `smoke`, `crop`, and `coil`. First doing data manipulation so the df is useful for plotting.

```{r}
#Pivot longer the `hapin` df to make a barplot
hapin_longer <- hapin %>%
  select(c(`kerosene`, `trash`, `stove_other`, `stove`, `smoky`, `incense`, `generator`, `smoke`, `crop`, `coil`)) %>% #Here selecting only the necessary variables
  pivot_longer(cols = everything(),
               names_to = "exposure", values_to = "response") #Create the longer df

#Create a simple barplot
ggplot(hapin_longer, aes(x= exposure, fill= response))+
  geom_bar(position = "dodge")+
  theme_classic()
```

The bar plot shows that the majority of participants recorded to not being exposed to most of the exposures, except to `stove`, which is the stove that the participants use. Others also recorded that were exposed to other stoves, or to trash burning.

Given that some of the categories have very low responses, I decided to combine some categories to have a greater variability in the exposures and then explore if these are good when modelling.

```{r}
#Combine some exposures to new categories
hapin <- hapin %>%
  mutate(micro_exposures = if_else( #The micro_exposures variable will include 'smoke', 'coil', 'incense' and 'kerosene'
    (smoke == "Yes" | coil == "Yes" | incense == "Yes" | kerosene == "Yes"),
    "Yes", "No", missing = "No"
  )) %>%
  mutate(macro_exposures = if_else( #The macro_exposures variable will include 'trash' and 'crop'
    (trash == "Yes" | crop == "Yes"),
    "Yes", "No", missing = "No"
  ))

#Save this as a new .RDS file
saveRDS(hapin, file = here("data", "processed-data", "hapin_samples.rds"))
```

And finally plotting the PM2.5, BC and CO concentrations in different graphs using `ggplot()`

```{r}
#Histogram plot for the PM2.5 concentrations
ggplot(hapin, aes(x= pm25, fill= fueltype))+
  geom_histogram()+
  theme_classic()+
  labs(x= "PM2.5 Concentration (ug/m3)")

#Histogram plot for the BC concentrations
ggplot(hapin, aes(x= bc, fill= fueltype))+
  geom_histogram()+
  theme_classic()+
  labs(x= "Black Carbon Concentration (ug/m3)")

#Histogram plot for the CO concentrations
ggplot(hapin, aes(x= co, fill= fueltype))+
  geom_histogram()+
  theme_classic()+
  labs(x= "Carbon Monoxide Concentration (ppm)")
```

The histograms for the concentration of the three pollutants show that they don't follow a normal distribution. Most of the concentrations are low, and it is also seen that overall the concentrations in the LPG fueltype are lower than the Biomass group. If these variables will be used for modeling purposes, they should be log-transformed or using a logistic regression approach.
